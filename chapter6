chapter6          创建、修改和删除表
表是数据库存储数据的基本单位。一个表包含若干个字段或记录。表的操作包括创建新表、修改表和删除表。
1、创建表的 方法
2、表的完整性约束条件
3、查看表结构的方法
4、修改表的方法
5、删除表的方法


设置表的主键
主键能惟一地标识该表中的每条信息。主键和记录的关系，如同身份证和人的关系。设置表的主键指在创建表时设置表的某个字段为该表的主键。
主键的主要目的是帮助MySQL以最快的速度查找到表中的某一条信息。主键必须满足的条件：主键必须是惟一的，表中任意两条记录的主键字段的值不能相同；主键的值是非空值。
主键可以是单一的字段，也可以是多个字段的组合。

1．单字段主键
2．多字段主键

设置表的外键
如果字段sno是一个表A的属性，且依赖于表B的主键。那么，称表B为父表，表A为子表，sno为表A的外键。通过sno字段将父表B和子表A建立关联关系。
设置表的外键指在创建表设置某个字段为外键。
设置外键的原则：必须依赖于数据库中已存在的父表的主键；外键可以为空值。
外键的作用是建立该表与其父表的关联关系。父表中删除某条信息时，子表中与之对应的信息也必须有相应的改变。
例如，stu_id是student表的主键，stu_id是grade表的外键。当stu_id为‘123’同学退学了，需要从student表中删除该学生的信息。
那么，grade表中stu_id为‘123’的所有信息也应该同时删除。

设置表的非空约束
非空性是指字段的值不能为空值（NULL）。非空约束将保证所有记录中该字段都有值。
如果用户新插入的记录中，该字段为空值，则数据库系统会报错。
例如，在id字段加上非空约束，id字段的值就不能为空值。
属性名  数据类型  NOT NULL

设置表的惟一性约束
例如，在表的id字段加上惟一性约束，那么每条记录的id值都是惟一的，不能出现重复的情况。
如果一条的记录的id为‘0001’，那么该表中就不能出现另一条记录的id为‘0001’。
属性名  数据类型  UNIQUE

设置表的属性值自动增加
AUTO_INCREMENT约束的字段可以是任何整数类型（TINYINT、SMALLINT、INT、BIGINT等）。
默认的情况下，该字段的值是从1开始自增。：
属性名  数据类型  AUTO_INCREMENT

设置表的属性的默认值
创建表时可以指定表中字段的默认值。
如果插入一条新的记录时没有为这个字段赋值，那么数据库系统会自动为这个字段插入默认值。
默认值是通过DEFAULT关键字来设置的。设置默认值的基本语法规则如下：
属性名  数据类型  DEFAULT  默认值

查看表结构
查看表结构是指查看数据库中已存在的表的定义。查看表结构的语句包括DESCRIBE语句和SHOW CREATE TABLE语句。
通过这两个语句，可以查看表的字段名、字段的数据类型、完整性约束条件等。本节将详细讲解查看表结构的方法。

查看表基本结构语句DESCRIBE
MySQL中，DESCRIBE语句可以查看表的基本定义。其中包括，字段名、字段数据类型、是否为主键和默认值等。DESCRIBE语句的语法形式如下：
DESCRIBE  表名;

查看表详细结构语句SHOW CREATE TABLE 

MySQL中，SHOW CREATE TABLE语句可以查看表的详细定义。该语句可以查看表的字段名、字段的数据类型、完整性约束条件等信息。
除此之外，还可以查看表默认的存储引擎和字符编码。SHOW CREATE TABLE语句的语法形式如下：
SHOW  CREATE  TABLE  表名;

修改表
修改表是指修改数据库中已存在的表的定义。修改表比重新定义表简单，不需要重新加载数据，也不会影响正在进行的服务。MySQL中通过ALTER TABLE语句来修改表。
修改表包括修改表名、修改字段数据类型、修改字段名、增加字段、删除字段、修改字段的排列位置、更改默认存储引擎和删除表的外键约束等。

修改表名
表名可以在一个数据库中唯一的确定一张表。数据库系统通过表名来区分不同的表。例如，数据库school中有student表。
那么，student表就是唯一的。在数据库school中不可能存在另一个名为“student”的表。MySQL中，修改表名是通过SQL语句ALTER TABLE实现的。其语法形式如下：
ALTER  TABLE  旧表名  RENAME  [TO]  新表名 ;


修改字段的数据类型

字段的数据类型包括整数型、浮点数型、字符串型、二进制类型、日期和时间类型等。
数据类型决定了数据的存储格式、约束条件和有效范围。表中的每个字段都有数据类型。
MySQL中，ALTER TABLE语句也可以修改字段的数据类型。其基本语法如下：
ALTER  TABLE  表名  MODIFY  属性名  数据类型 ;

修改字段名
字段名可以在一张表中唯一的确定一个字段。数据库系统通过字段名来区分表中的不同字段。
例如，student表中包含id字段。那么，id字段在student表中是唯一的。student表中不可能存在另一个名为“id”的字段。
MySQL中，ALTER TABLE语句也可以修改表的字段名。其基本语法如下：
ALTER  TABLE  表名  CHANGE  旧属性名  新属性名  新数据类型 ;
其中，“旧属性名”参数指修改前的字段名；“新属性名”参数指修改后的字段名；“新数据类型”参数修改后的数据类型，如不需要修改，则将新数据类型设置成与原来一样。
1．只修改字段名
2．修改字段名和字段数据类型

增加字段
在创建表时，表中的字段就已经定义完成。如果要增加新的字段，可以通过ALTER TABLE语句进行增加。MySQL中，ALTER TABLE语句增加字段的基本语法如下：
ALTER  TABLE  表名  ADD  属性名1   数据类型  [完整性约束条件]  [FIRST |  AFTER  属性名2] ;
1．增加无完整性约束条件的字段
2．增加有完整性约束条件的字段
3．表的第一个位置增加字段
4．表的指定位置之后增加字段

删除字段 
删除字段是指删除已经定义好的表中的某个字段。在表创建好之后，如果发现某个字段需要删除。
可以采用将整个表都删除，然后重新创建一张表的做法。这样做是可以达到目的，但必然会影响到表中的数据。
而且，操作比较麻烦。MySQL中，ALTER TABLE语句也可以删除表中的字段。其基本语法如下：
ALTER  TABLE  表名  DROP  属性名 ;

修改字段的排列位置

创建表的时候，字段在表中的排列位置就已经确定了。如果要改变字段在表中的排列位置，则需要ALTER TABLE语句来处理。
MySQL中，修改字段排列位置的ALTER TABLE语句的基本语法如下：
ALTER  TABLE  表名  MODIFY  属性名1  数据类型  FIRST | AFTER  属性名2;
其中，“属性名1”参数指需要修改位置的字段的名称；“数据类型”参数指“属性名1”的数据类型；“FIRST”参数指定位置为表的第一个位置；“AFTER 属性名2”参数指定“属性名1”插入在“属性名2”之后。
1．字段修改到第一个位置
2．字段修改到指定位置

更改表的存储引擎

MySQL存储引擎是指MySQL数据库中表的存储类型。MySQL存储引擎包括InnoDB、MyISAM、MEMORY等。
不同的表类型有着不同的优缺点，在第5章有详细的介绍。在创建表的时候，存储引擎就已经设定好了。
如果要改变，可以通过重新创建一张表来实现。这样做是可以达到目的，但必然会影响到表中的数据。
而且，操作比较麻烦。MySQL中，ALTER TABLE语句也可以更改表的存储引擎的类型。其基本语法如下：
ALTER  TABLE  表名  ENGINE=存储引擎名 ;


删除表的外键约束

外键是一个特殊字段，其将某一表与其父表建立关联关系。
在创建表的时候，外键约束就已经设定好了。由于特殊需要，与父表之间的关联关系需要去除，要求删除外键约束。
MySQL中，ALTER TABLE语句也可以删除表的外键约束。其基本语法如下：
ALTER  TABLE  表名  DROP  FOREIGN  KEY  外键别名 ;



















创建表
CREAE TABLE 表名(属性名 数据类型【完整性约束条件】
                属性名 数据类型【完整性约束条件】
                ……
                );
                
                
  数据类型 INT(10) VARCHAR(20) BOOLEAN FLOAT 
  约束条件 NOT NULL UNIQUE PRIMARY KEY AUTO_INCREMENT DEFAULT xx特殊：子表外键设置时 CONSTRAINT grade_fk FOREIGN KEY (s_num[,……]) REFERENCES student(num[,……])
  
  
  查看表结构
  DESC 表；
  查看表详细结构
  SHOW　CREATE TABLE 表；
  
  
  …………………………………………………………………………………………………………………………………………………………………………………………………………………………………………
  
  ALTER TABLE OLD RENAME [TO] NEW
  
                  
  ALTER TABLE 表 MODIFY 属性名 数据类型【完整性约束条件】 [FIRST] [AFTER 属性名1] 
                           修改数据                         修改位置
                 CHANGE   OLD字段  字段  新类型
                             修改字段
                 ADD 属性名 数据类型【完整性约束条件】 [FIRST] [AFTER 属性名1]
                             添加字段并在想要的位子
                             
                 DROP 属性名
                  删除字段
                  ENGINE=MyISAM
                  更改表的存储引擎
           外键表 DROP FOREIGN KEY 外键名【grade_fk】
                  删除外键连接 用show create table 外键表 查看 
                  ps：drop 主表时首先要删除子表的外键
      …………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………
      习题
      …………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………
      example数据库创建一个student表和grade表
      student表：
      字段名   字段描述    数据类型    主键    外键    非空    唯一    自增
      num     学号        INT(10)     Y       N       Y     Y         N
      name    姓名        VARCHAR(20) N       N       Y     N         N
      sex     性别        VARXHAR(4)  N       N       Y     N         N
      birthday出生日期    DATATIME    N        N       N      N       N
      address 地址        VARCHAR(50) N       N       N       N       N
      grade表：
      字段名   字段描述    数据类型    主键    外键    非空    唯一    自增  
      id      编号        INT(10)     Y       N      Y        Y       Y
      course  课程名       VARCHAR(10)N        N     Y         N       N
      s_num   学号        INT(10)     N       Y       Y       N       N
      grade   成绩        VARCHAR(4)  N       N       N        N      N
      1、将grade表的course字段的数据类型改为VARCHAR(20)
      2、将s_num字段的位置改到course字段的前面
      3、将grade字段改名为score
      4、删除grade表的外键约束
      5、将grade表的存储引擎改为 MyISAM类型
      6、将student表的 address字段删除
      7、在student表中增加名为phone的字段，数据类型为INT（10）
      8、将grade表改名为gradeInfo
      9、删除student表
      ………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………
      teacher：
      字段名   字段描述    数据类型    主键    外键    非空    唯一    自增
      id      编号        INT(4)      Y       N       Y       Y       Y
      num     教工号      INT(10)      N      N       Y       Y       N
      name    姓名        VARCHAR(20) N       N       Y       N       N 
      sex     性别        VARCHAR(4)  N       N       Y       N       N 
      birthday 出生日期   DATATIME    N        N       N      N       N 
      address  家庭住址    VARCHAR(20)N       N        N      N       N
     1、将teacher表的name字段的数据类型改为VARCHAR（30）
     2、将birthday字段的位置改到sex字段前面
     3、将num字段的改名为t_id
     4、将teacher表的address字段删除
     5、增加wages字段，数据类型为FLOAT
     6、将teacher表改名为teacherinfo
     7、将teacher表的存储引擎改为MyISAM
     …………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………
     在example库创建department表和worker表
     department：
     字段名   字段描述    数据类型    主键    外键    非空    唯一    自增
     d_id     部门号     INT(4)      Y      N       Y       Y       N 
     d_name   部门名     VARCHAR(20) N      N       Y       Y       N
     function 部门职能   VARCHAR(50) N      N       N       N       N
     address  部门位置   VARCHAR(20) N      N       N       N       N
     worker:
     字段名   字段描述    数据类型    主键    外键    非空    唯一    自增
     id       编号        INT(4)     Y      N       Y       Y       Y
     num      员工号      INT(10)    N      N       Y       Y       N
     d_id     部门号      INT(4)     N      Y       N       N      N 
     name     姓名        VARCHAR(20)N      N       Y       N       N
     sex      性别        VARCHAR(4) N      N       N       N       N 
     birthday 出生日期    DATE       N      N       N       N       N
     address  家庭住址    VARCHAR(50)N      N       N       N       N
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     
     PS:字段改名后，部分约束条件丢失，每次该表字段或者类型的应该用DESC语句查询结构 
     自增字段必须主键的一部分，一个表只能有一个自增字 可以是任何整数类型，自增字段没有默认值
     
     
     ……………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………
     在example数据库创建animal表
     
     字段名   字段描述    数据类型    主键    外键    非空    唯一    自增
     id      编号         INT(4)      Y     N       Y       Y       Y
     name    名称         VARCHAR(20) N     N       Y       N       N
     kinds   种类         VARCHAR(8)  N     N       Y       N       N
     legs    腿数         INT(4)      N     N       N       N       N
     behacior习性         VARCHAR(50) N     N       N       N       N
     1、将name字段的数据类型改为VARCHAR(30)且保留非空约束
     2、将behavior字段的位置改为legs字段的 前面
     3、将kinds字段改名为category
     4、在表中增加fur字段，数据类型是VARCHAR（10）
     5、删除legs字段
     6、将animal表的存储引擎更改为MyISAM类型
     7、将animal表改名为animalInfo
     …………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………
     在数据库transport建表transport和表car
：    transport：
     字段名   字段描述    数据类型    主键    外键    非空    唯一    自增
     id       编号       INT（4）    Y        N       Y     Y       Y
     type     类型       VARCHAR(20)N         N       Y     Y       N
     function 功能       VARCHAR(50) N        N       N     N       N
     
     
     car：
     字段名   字段描述    数据类型    主键    外键    非空    唯一    自增
      id      编号        INT(4)    Y         N       Y     Y        Y
      num     类型号      INT(10)    N         Y       Y     N       N
      name    名称        VARCHAR(20)N        N       Y      N       N
      company 生产商名    VARCHAR(50)N        N        N     N        N
      address 生产地址    VARCHAR(50)N        N        N     N        N
      
      
      
      
      
      
      
      
      
      
      
      
      
      
